-- Class of Match manager
class MatchManager is subclass of Environment, MyPrintTestListener


instance variables

-- matchmakes
matchmakes : map MatchID to MatchMake := {|->};
inv 
  (forall id in set dom matchmakes & id = matchmakes(id).getID())
    and
  (forall m in set rng matchmakes & valid(m))
    and
  (forall mm1, mm2 in set rng matchmakes & 
    mm1 <> mm2 => consistent(mm1, mm2));

-- teams
teams : map TeamID to Team := {|->};
inv 
  (forall id in set dom teams & id = teams(id).getID())
    and
  (forall t in set rng teams & validTeam(t))
    and
  (forall t1, t2 in set rng teams & 
    t1 <> t2 => consistentTeam(t1, t2));


functions

-- dupulication check
public consistent : MatchMake * MatchMake -> bool
consistent(mm1, mm2) ==
   mm1.getID() <> mm2.getID() or equals(mm1.getMatch(), mm2.getMatch());

-- dupulication check
public consistentTeam : Team * Team -> bool
consistentTeam(t1, t2) ==
   t1.getID() <> t2.getID();


operations

-- validation check
public pure valid : MatchMake ==> bool
valid(mm) ==
  return
    mm.getID() in set getAllMatchIDs();

-- validation check
public pure validTeam : Team ==> bool
validTeam(t) ==
  return
    t.getID() in set getAllTeamIDs();
    
-- add MatchMake
public addMatchMake : MatchMake ==> ()
addMatchMake(matchmake) ==
  atomic(
    matchmakes := matchmakes munion {matchmake.getID() |-> matchmake};
  )
pre 
  matchmake.getID() not in set dom matchmakes
    and
  valid(matchmake)
    and
  forall n in set rng matchmakes & consistent(matchmake, n)
post matchmake in set rng matchmakes;


-- add Team
public addTeam : Team ==> ()
addTeam(team) ==
  atomic(
    teams := teams munion {team.getID() |-> team};
  )
pre 
  team.getID() not in set dom teams
    and
  validTeam(team)
    and
  forall n in set rng teams & consistentTeam(team, n)
post team in set rng teams;

-- get MatchMake from specific ID
public pure getMatchMake : MatchID ==> MatchMake
getMatchMake(matchID) ==
  return matchmakes(matchID)
pre matchID in set dom matchmakes;

-- get Team from specific ID
public pure getTeam : TeamID ==> Team
getTeam(teamID) ==
  return teams(teamID)
pre teamID in set dom teams;

end MatchManager
