-- Class of MatchMake
class MatchMake is subclass of Environment

values

instance variables

--id : MatchID; -- Identifier of a Match
matchdone : bool := false;
score : map TeamID to int;
state : map TeamID to State;
point : map TeamID to int;
match : Match;

operations

-- constructor
public MatchMake : Match ==> MatchMake
MatchMake(m) ==
  atomic(
		matchdone := false;
		score := {|->};
		state := {|->};
		point := {|->};
		match := m;
  );

--public pure getID : () ==> MatchID
--getID() ==
--  return id;

public pure isDone : () ==> bool
isDone() == return matchdone;

done : () ==> ()
done() == (
	matchdone := true;
);

public pure getMatch : () ==> Match
getMatch() == return match;

public setMatch : TeamID * TeamID ==> ()
setMatch(teamID1, teamID2) == (
		match := mk_(teamID1, teamID2);
)
pre teamID1 in set getAllTeamIDs()
	and teamID2 in set getAllTeamIDs();


public setScore : int * int ==> ()
setScore(goal1, goal2) ==  (
	dcl teamID1 : TeamID := match.#1;
	dcl teamID2 : TeamID := match.#2;
	
	dcl state1 : State := <DRAW>,
			state2 : State := <DRAW>;
	dcl point1 : int := 1,
			point2 : int := 1;
	
	if goal1 > goal2 then (
			state1 := <WIN>;
			state2 := <LOSE>;
			point1 := 3;
			point2 := 0;
	);
	if goal2 > goal1 then (
			state2 := <WIN>;
			state1 := <LOSE>;
			point2 := 3;
			point1 := 0;
	);
	score := score munion {teamID1 |-> goal1} munion {teamID2 |-> goal2};
	state := state munion {teamID1 |-> state1} munion {teamID2 |-> state2};
	point := point munion {teamID1 |-> point1} munion {teamID2 |-> point2};
	
	done();
)
pre goal1 >= 0 and goal2 >= 0
	and card dom score = 0
post card dom score = 2;


public pure getScore : TeamID ==>  int
getScore(teamID) == return score(teamID);

public pure  getState: TeamID ==> State
getState(teamID) == (
		return state(teamID);
);

public pure  getPoint: TeamID ==> int
getPoint(teamID) == (
		return point(teamID);
);


end MatchMake
